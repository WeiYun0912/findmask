{"version":3,"sources":["image/masks.png","components/Mask.js","components/Masks.js","components/Navbar.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Mask","filterMasks","filterAdult","filterChildren","filter","masks","properties","mask_adult","mask_child","sort","a","b","className","map","mask","src","masksImage","alt","name","aria-hidden","address","phone","style","color","updated","href","replace","target","Masks","useState","complete","setComplete","county","setCounty","townShip","setTownShip","countyName","setCountyName","townName","setTownName","setFilterMasks","searchPha","setSearchPha","searchType","setSearchType","setFilterAdult","setFilterChildren","useEffect","getCounty","require","data","cty","value","updateSearchType","searchMasks","alert","val","match","filterMask","type","id","onChange","for","onClick","placeholder","e","Fragment","town","districts","defaultValue","Navbar","data-toggle","data-target","aria-controls","aria-expanded","aria-label","App","setMask","getMaskData","fetch","response","json","features","Boolean","window","location","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.a0c621d5.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/masks.027d8d83.png\";","import React from \"react\";\r\nimport masksImage from \"../image/masks.png\";\r\nexport default function Mask({ filterMasks, filterAdult, filterChildren }) {\r\n  if (filterAdult) {\r\n    filterMasks = filterMasks.filter(masks => {\r\n      return masks.properties.mask_adult > 0;\r\n    });\r\n  }\r\n  if (filterChildren) {\r\n    filterMasks = filterMasks.filter(masks => {\r\n      return masks.properties.mask_child > 0;\r\n    });\r\n  }\r\n  // console.log(filterMasks);\r\n  // filterMasks = filterMasks.filter(ma => {\r\n  //   return ma.properties.mask_adult > 0;\r\n  // });\r\n  filterMasks.sort((a, b) => {\r\n    return b.properties.mask_adult - a.properties.mask_adult;\r\n  });\r\n\r\n  return (\r\n    <div className=\"mask-flex\">\r\n      {filterMasks.map(mask => (\r\n        <div className=\"card mb-5 mask-fix\">\r\n          <img src={masksImage} className=\"card-img-top\" alt=\"...\" />\r\n          <div className=\"card-body\">\r\n            <h5 className=\"card-title mb-3\">\r\n              <b>{mask.properties.name}</b>\r\n            </h5>\r\n            <p className=\"card-text text-left\">\r\n              <i className=\"fa fa-male fa-fiexed\" aria-hidden=\"true\"></i>\r\n              {mask.properties.mask_adult}\r\n            </p>\r\n            <p className=\"card-text text-left\">\r\n              <i className=\"fa fa-child fa-fiexed\" aria-hidden=\"true\"></i>\r\n              {mask.properties.mask_child}\r\n            </p>\r\n            <p className=\"card-text text-left\">\r\n              <i className=\"fa fa-map-marker fa-fiexed\" aria-hidden=\"true\"></i>\r\n              {mask.properties.address}\r\n            </p>\r\n            <p className=\"card-text text-left\">\r\n              <i className=\"fa fa-phone fa-fiexed\" aria-hidden=\"true\"></i>\r\n              {mask.properties.phone}\r\n            </p>\r\n            <p className=\"card-text text-left\" style={{ color: \"#95ADBE\" }}>\r\n              <small>更新時間：{mask.properties.updated}</small>\r\n            </p>\r\n          </div>\r\n          <div className=\"card-footer\">\r\n            <a\r\n              className=\"btn btn-dark btn-block\"\r\n              href={`https://www.google.com.tw/maps/place/${mask.properties.address.replace(\r\n                \" \",\r\n                \"\"\r\n              )}/`}\r\n              target=\"_blank\"\r\n            >\r\n              地圖查看\r\n            </a>\r\n          </div>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport Mask from \"./Mask\";\r\nexport default function Masks({ mask }) {\r\n  const [complete, setComplete] = useState([]);\r\n  const [county, setCounty] = useState(\"\");\r\n  const [townShip, setTownShip] = useState([]);\r\n  const [countyName, setCountyName] = useState(\"\");\r\n  const [townName, setTownName] = useState(\"\");\r\n  const [filterMasks, setFilterMasks] = useState([]);\r\n  const [searchPha, setSearchPha] = useState(\"\");\r\n  const [searchType, setSearchType] = useState(false);\r\n  const [filterAdult, setFilterAdult] = useState(false);\r\n  const [filterChildren, setFilterChildren] = useState(false);\r\n\r\n  useEffect(() => {\r\n    getCounty();\r\n  }, [townShip]);\r\n  //從JSON檔取出縣市名稱\r\n  const getCounty = async () => {\r\n    // console.log(data);\r\n    let data = await require(\"./county.json\");\r\n    const county = data.map(cty => {\r\n      // console.log(type);\r\n      return <option value={cty.name}>{cty.name}</option>;\r\n    });\r\n    setComplete(data);\r\n    // setCounty();\r\n    setCounty(county);\r\n  };\r\n\r\n  //從縣市關聯出鄉鎮市區名稱\r\n  const setCountyNameBySelect = e => {\r\n    let county = e.target.value;\r\n    setCountyName(county);\r\n    const townsForcounty = complete.filter(town => {\r\n      return town.name === county;\r\n    });\r\n\r\n    const towns = townsForcounty.map(town => {\r\n      return town.districts;\r\n    });\r\n    const town = towns[0].map(town => {\r\n      return <option value={town.name}>{town.name}</option>;\r\n    });\r\n    setTownShip(town);\r\n  };\r\n\r\n  //設定鄉鎮名稱\r\n  const setTownNameBySelect = e => {\r\n    setTownName(e.target.value);\r\n  };\r\n\r\n  //更新搜尋字\r\n  const updateSearchPha = e => {\r\n    setSearchPha(e.target.value);\r\n  };\r\n\r\n  //更新搜尋種類\r\n  const updateSearchType = () => {\r\n    setSearchType(!searchType);\r\n  };\r\n\r\n  //勾選無成人口罩\r\n  const updateFilterAdult = () => {\r\n    setFilterAdult(!filterAdult);\r\n  };\r\n  //勾選無兒童口罩\r\n  const updateFilterChildren = () => {\r\n    setFilterChildren(!filterChildren);\r\n  };\r\n\r\n  //檢查搜尋的是哪種狀態\r\n  const searchMasks = async () => {\r\n    if (searchType === false) {\r\n      if (countyName === \"\" || townName === \"\") {\r\n        alert(\"請選擇縣市或鄉鎮市區\");\r\n      } else {\r\n        let filterMask = await mask.filter(val => {\r\n          return val.properties.address.match(countyName + townName) != null;\r\n        });\r\n        setFilterMasks(filterMask);\r\n      }\r\n    } else {\r\n      if (searchPha === \"\") {\r\n        alert(\"請輸入藥局名稱\");\r\n      } else {\r\n        let filterMask = await mask.filter(val => {\r\n          return val.properties.name.match(searchPha) != null;\r\n        });\r\n        setFilterMasks(filterMask);\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"searchArea\">\r\n        <div className=\"form-check\">\r\n          <div className=\"checkbox-fix\">\r\n            <input type=\"checkbox\" id=\"search1\" onChange={updateFilterAdult} />\r\n            <label className=\"form-check-label\" for=\"search1\">\r\n              尚有成人口罩\r\n            </label>\r\n            <input\r\n              type=\"checkbox\"\r\n              id=\"search2\"\r\n              onChange={updateFilterChildren}\r\n            />\r\n            <label className=\"form-check-label\" for=\"search2\">\r\n              尚有兒童口罩\r\n            </label>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      {/* <div class=\"form-check form-check-inline\">\r\n        <input\r\n          class=\"form-check-input\"\r\n          type=\"checkbox\"\r\n          id=\"inlineCheckbox1\"\r\n          value=\"option1\"\r\n        />\r\n        <label class=\"form-check-label\" for=\"inlineCheckbox1\">\r\n          1\r\n        </label>\r\n      </div> */}\r\n\r\n      <div className=\"input-group mb-3 mt-3\">\r\n        {searchType ? (\r\n          <button\r\n            className=\"btn btn-info button-fix\"\r\n            onClick={updateSearchType}\r\n          >\r\n            查詢縣市藥局\r\n          </button>\r\n        ) : (\r\n          <button\r\n            className=\"btn btn-success button-fix\"\r\n            onClick={updateSearchType}\r\n          >\r\n            查詢藥局名稱\r\n          </button>\r\n        )}\r\n      </div>\r\n      <div className=\"input-group mb-3 mt-3\">\r\n        {searchType ? (\r\n          <input\r\n            type=\"text\"\r\n            className=\"form-control\"\r\n            id=\"\"\r\n            placeholder=\"輸入藥局名稱\"\r\n            onChange={updateSearchPha}\r\n          />\r\n        ) : (\r\n          <React.Fragment>\r\n            <select\r\n              className=\"custom-select mr-3 select-fix\"\r\n              onChange={setCountyNameBySelect}\r\n            >\r\n              <option defaultValue>請選擇縣市區域</option>\r\n              {county}\r\n            </select>\r\n            <select\r\n              className=\"custom-select select-fix\"\r\n              onChange={setTownNameBySelect}\r\n            >\r\n              <option defaultValue>請選擇鄉鎮市區</option>\r\n              {townShip}\r\n            </select>\r\n          </React.Fragment>\r\n        )}\r\n\r\n        {/* <select\r\n          className=\"custom-select mr-3 select-fix\"\r\n          onChange={setCountyNameBySelect}\r\n        >\r\n          <option defaultValue>請選擇縣市區域</option>\r\n          {county}\r\n        </select>\r\n        <select\r\n          className=\"custom-select select-fix\"\r\n          onChange={setTownNameBySelect}\r\n        >\r\n          <option defaultValue>請選擇鄉鎮市區</option>\r\n          {townShip}\r\n        </select> */}\r\n        <button\r\n          className=\"btn btn-primary ml-3 button-fix\"\r\n          onClick={searchMasks}\r\n        >\r\n          查詢\r\n        </button>\r\n      </div>\r\n\r\n      <Mask\r\n        filterMasks={filterMasks}\r\n        filterAdult={filterAdult}\r\n        filterChildren={filterChildren}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nexport default function Navbar() {\r\n  return (\r\n    <nav className=\"navbar navbar-expand-lg navbar-light bg-dark\">\r\n      <a className=\"navbar-brand\" href=\"/\" style={{ color: \"#fff\" }}>\r\n        TWMasks\r\n      </a>\r\n      <button\r\n        className=\"navbar-toggler\"\r\n        type=\"button\"\r\n        data-toggle=\"collapse\"\r\n        data-target=\"#navbarSupportedContent\"\r\n        aria-controls=\"navbarSupportedContent\"\r\n        aria-expanded=\"false\"\r\n        aria-label=\"Toggle navigation\"\r\n      >\r\n        <span className=\"navbar-toggler-icon\"></span>\r\n      </button>\r\n\r\n      <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n        <ul className=\"navbar-nav mr-auto\">\r\n          <li className=\"nav-item active\">\r\n            {/* <a className=\"nav-link\" href=\"#\" style={{ color: \"#fff\" }}>\r\n              Home <span className=\"sr-only\">(current)</span>\r\n            </a> */}\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    </nav>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport Masks from \"./components/Masks\";\nimport Navbar from \"./components/Navbar\";\nfunction App() {\n  const [mask, setMask] = useState([]);\n  useEffect(() => {\n    getMaskData();\n  }, []);\n\n  const getMaskData = async () => {\n    const response = await fetch(\n      `https://raw.githubusercontent.com/kiang/pharmacies/master/json/points.json`\n    );\n    const data = await response.json();\n    // console.log(data.features);\n    setMask(data.features);\n  };\n  return (\n    <div className=\"App\">\n      <Navbar />\n      <div className=\"container\">\n        <Masks mask={mask} />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}